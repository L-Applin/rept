
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DEF END ID INC INT LP MOVE REG REPEAT RPprog : instr \n            | instr proginstr : cmd \n             | macdefcmd : incr \n           | mv \n           | rpt \n           | macincr : INC REGmv : REG MOVE REG \n          | REG MOVE INTrpt : REPEAT REG bodybody : innerbody ENDinnerbody : cmd \n                 | cmd innerbodymac : REG MOVE ID reglistmacdef : DEF ID reglist bodyinnerreglist : REG \n                    | REG innerreglistreglist : LP innerreglist RP '
    
_lr_action_items = {'DEF':([0,2,4,5,7,8,9,10,16,22,23,25,26,30,31,33,],[1,-8,-5,-6,-3,-4,-7,1,-9,-12,-10,-11,-17,-13,-16,-20,]),'INT':([17,],[25,]),'ID':([1,17,],[13,24,]),'END':([2,4,5,9,16,20,21,22,23,25,29,30,31,33,],[-8,-5,-6,-7,-9,-14,30,-12,-10,-11,-15,-13,-16,-20,]),'REPEAT':([0,2,4,5,7,8,9,10,14,16,18,20,22,23,25,26,30,31,33,],[6,-8,-5,-6,-3,-4,-7,6,6,-9,6,6,-12,-10,-11,-17,-13,-16,-20,]),'INC':([0,2,4,5,7,8,9,10,14,16,18,20,22,23,25,26,30,31,33,],[11,-8,-5,-6,-3,-4,-7,11,11,-9,11,11,-12,-10,-11,-17,-13,-16,-20,]),'REG':([0,2,4,5,6,7,8,9,10,11,14,16,17,18,19,20,22,23,25,26,27,30,31,33,],[12,-8,-5,-6,14,-3,-4,-7,12,16,12,-9,23,12,27,12,-12,-10,-11,-17,27,-13,-16,-20,]),'MOVE':([12,],[17,]),'LP':([13,24,],[19,19,]),'RP':([27,28,32,],[-18,33,-19,]),'$end':([2,3,4,5,7,8,9,10,15,16,22,23,25,26,30,31,33,],[-8,0,-5,-6,-3,-4,-7,-1,-2,-9,-12,-10,-11,-17,-13,-16,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'innerreglist':([19,27,],[28,32,]),'mac':([0,10,14,18,20,],[2,2,2,2,2,]),'prog':([0,10,],[3,15,]),'body':([14,18,],[22,26,]),'reglist':([13,24,],[18,31,]),'incr':([0,10,14,18,20,],[4,4,4,4,4,]),'mv':([0,10,14,18,20,],[5,5,5,5,5,]),'innerbody':([14,18,20,],[21,21,29,]),'cmd':([0,10,14,18,20,],[7,7,20,20,20,]),'macdef':([0,10,],[8,8,]),'rpt':([0,10,14,18,20,],[9,9,9,9,9,]),'instr':([0,10,],[10,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> instr','prog',1,'p_prog','rpt_syntax.py',97),
  ('prog -> instr prog','prog',2,'p_prog','rpt_syntax.py',98),
  ('instr -> cmd','instr',1,'p_instr','rpt_syntax.py',105),
  ('instr -> macdef','instr',1,'p_instr','rpt_syntax.py',106),
  ('cmd -> incr','cmd',1,'p_cmd','rpt_syntax.py',110),
  ('cmd -> mv','cmd',1,'p_cmd','rpt_syntax.py',111),
  ('cmd -> rpt','cmd',1,'p_cmd','rpt_syntax.py',112),
  ('cmd -> mac','cmd',1,'p_cmd','rpt_syntax.py',113),
  ('incr -> INC REG','incr',2,'p_incr','rpt_syntax.py',117),
  ('mv -> REG MOVE REG','mv',3,'p_mv','rpt_syntax.py',121),
  ('mv -> REG MOVE INT','mv',3,'p_mv','rpt_syntax.py',122),
  ('rpt -> REPEAT REG body','rpt',3,'p_rpt','rpt_syntax.py',126),
  ('body -> innerbody END','body',2,'p_body','rpt_syntax.py',130),
  ('innerbody -> cmd','innerbody',1,'p_innerbody','rpt_syntax.py',134),
  ('innerbody -> cmd innerbody','innerbody',2,'p_innerbody','rpt_syntax.py',135),
  ('mac -> REG MOVE ID reglist','mac',4,'p_mac','rpt_syntax.py',143),
  ('macdef -> DEF ID reglist body','macdef',4,'p_macdef','rpt_syntax.py',148),
  ('innerreglist -> REG','innerreglist',1,'p_innerreglist','rpt_syntax.py',152),
  ('innerreglist -> REG innerreglist','innerreglist',2,'p_innerreglist','rpt_syntax.py',153),
  ('reglist -> LP innerreglist RP','reglist',3,'p_reglist','rpt_syntax.py',160),
]
