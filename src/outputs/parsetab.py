
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DEF END ID INC INT LP MOVE REG REPEAT RPprog : instr \n            | instr proginstr : cmd \n             | macdefcmd : incr \n           | mv \n           | rpt \n           | macincr : INC REGmv : REG MOVE REG \n          | REG MOVE INTrpt : REPEAT REG bodybody : innerbody ENDinnerbody : cmd \n                 | cmd innerbodymac : REG MOVE ID reglistmacdef : DEF ID reglist bodyinnerreglist : REG \n                    | REG innerreglistreglist : LP innerreglist RP '
    
_lr_action_items = {'DEF':([0,2,3,4,5,6,7,8,15,20,21,23,26,29,30,32,],[9,9,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-17,-16,-13,-20,]),'INC':([0,2,3,4,5,6,7,8,15,17,18,20,21,23,25,26,29,30,32,],[10,10,-3,-4,-5,-6,-7,-8,-9,10,10,-10,-11,-12,10,-17,-16,-13,-20,]),'REG':([0,2,3,4,5,6,7,8,10,12,15,16,17,18,19,20,21,23,25,26,28,29,30,32,],[11,11,-3,-4,-5,-6,-7,-8,15,17,-9,20,11,11,28,-10,-11,-12,11,-17,28,-16,-13,-20,]),'REPEAT':([0,2,3,4,5,6,7,8,15,17,18,20,21,23,25,26,29,30,32,],[12,12,-3,-4,-5,-6,-7,-8,-9,12,12,-10,-11,-12,12,-17,-16,-13,-20,]),'$end':([1,2,3,4,5,6,7,8,13,15,20,21,23,26,29,30,32,],[0,-1,-3,-4,-5,-6,-7,-8,-2,-9,-10,-11,-12,-17,-16,-13,-20,]),'END':([5,6,7,8,15,20,21,23,24,25,29,30,31,32,],[-5,-6,-7,-8,-9,-10,-11,-12,30,-14,-16,-13,-15,-20,]),'ID':([9,16,],[14,22,]),'MOVE':([11,],[16,]),'LP':([14,22,],[19,19,]),'INT':([16,],[21,]),'RP':([27,28,33,],[32,-18,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,2,],[1,13,]),'instr':([0,2,],[2,2,]),'cmd':([0,2,17,18,25,],[3,3,25,25,25,]),'macdef':([0,2,],[4,4,]),'incr':([0,2,17,18,25,],[5,5,5,5,5,]),'mv':([0,2,17,18,25,],[6,6,6,6,6,]),'rpt':([0,2,17,18,25,],[7,7,7,7,7,]),'mac':([0,2,17,18,25,],[8,8,8,8,8,]),'reglist':([14,22,],[18,29,]),'body':([17,18,],[23,26,]),'innerbody':([17,18,25,],[24,24,31,]),'innerreglist':([19,28,],[27,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> instr','prog',1,'p_prog','rpt_syntax.py',97),
  ('prog -> instr prog','prog',2,'p_prog','rpt_syntax.py',98),
  ('instr -> cmd','instr',1,'p_instr','rpt_syntax.py',105),
  ('instr -> macdef','instr',1,'p_instr','rpt_syntax.py',106),
  ('cmd -> incr','cmd',1,'p_cmd','rpt_syntax.py',110),
  ('cmd -> mv','cmd',1,'p_cmd','rpt_syntax.py',111),
  ('cmd -> rpt','cmd',1,'p_cmd','rpt_syntax.py',112),
  ('cmd -> mac','cmd',1,'p_cmd','rpt_syntax.py',113),
  ('incr -> INC REG','incr',2,'p_incr','rpt_syntax.py',117),
  ('mv -> REG MOVE REG','mv',3,'p_mv','rpt_syntax.py',121),
  ('mv -> REG MOVE INT','mv',3,'p_mv','rpt_syntax.py',122),
  ('rpt -> REPEAT REG body','rpt',3,'p_rpt','rpt_syntax.py',126),
  ('body -> innerbody END','body',2,'p_body','rpt_syntax.py',130),
  ('innerbody -> cmd','innerbody',1,'p_innerbody','rpt_syntax.py',134),
  ('innerbody -> cmd innerbody','innerbody',2,'p_innerbody','rpt_syntax.py',135),
  ('mac -> REG MOVE ID reglist','mac',4,'p_mac','rpt_syntax.py',143),
  ('macdef -> DEF ID reglist body','macdef',4,'p_macdef','rpt_syntax.py',148),
  ('innerreglist -> REG','innerreglist',1,'p_innerreglist','rpt_syntax.py',152),
  ('innerreglist -> REG innerreglist','innerreglist',2,'p_innerreglist','rpt_syntax.py',153),
  ('reglist -> LP innerreglist RP','reglist',3,'p_reglist','rpt_syntax.py',160),
]
