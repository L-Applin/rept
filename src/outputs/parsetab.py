
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DEF END ID INC INT LP MOVE REG REPEAT RPprog : instr \n            | instr proginstr : cmd \n             | macdefcmd : incr \n           | mv \n           | rpt \n           | macincr : INC REGmv : REG MOVE REG \n          | REG MOVE INTrpt : REPEAT REG bodybody : innerbody ENDinnerbody : cmd \n                 | cmd innerbodymac : REG MOVE ID reglistmacdef : DEF ID reglist bodyinnerreglist : REG \n                    | REG innerreglistreglist : LP innerreglist RP '
    
_lr_action_items = {'ID':([3,13,],[14,19,]),'REPEAT':([0,2,5,6,8,9,10,11,15,17,18,20,21,23,25,26,27,31,33,],[7,-8,7,-7,-3,-6,-4,-5,-9,7,-10,-11,7,7,-12,-16,-17,-13,-20,]),'$end':([2,5,6,8,9,10,11,12,15,16,18,20,25,26,27,31,33,],[-8,-1,-7,-3,-6,-4,-5,0,-9,-2,-10,-11,-12,-16,-17,-13,-20,]),'INC':([0,2,5,6,8,9,10,11,15,17,18,20,21,23,25,26,27,31,33,],[4,-8,4,-7,-3,-6,-4,-5,-9,4,-10,-11,4,4,-12,-16,-17,-13,-20,]),'LP':([14,19,],[22,22,]),'DEF':([0,2,5,6,8,9,10,11,15,18,20,25,26,27,31,33,],[3,-8,3,-7,-3,-6,-4,-5,-9,-10,-11,-12,-16,-17,-13,-20,]),'MOVE':([1,],[13,]),'RP':([28,29,32,],[-18,33,-19,]),'END':([2,6,9,11,15,18,20,23,24,25,26,30,31,33,],[-8,-7,-6,-5,-9,-10,-11,-14,31,-12,-16,-15,-13,-20,]),'REG':([0,2,4,5,6,7,8,9,10,11,13,15,17,18,20,21,22,23,25,26,27,28,31,33,],[1,-8,15,1,-7,17,-3,-6,-4,-5,18,-9,1,-10,-11,1,28,1,-12,-16,-17,28,-13,-20,]),'INT':([13,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'reglist':([14,19,],[21,26,]),'body':([17,21,],[25,27,]),'cmd':([0,5,17,21,23,],[8,8,23,23,23,]),'innerbody':([17,21,23,],[24,24,30,]),'rpt':([0,5,17,21,23,],[6,6,6,6,6,]),'instr':([0,5,],[5,5,]),'innerreglist':([22,28,],[29,32,]),'mac':([0,5,17,21,23,],[2,2,2,2,2,]),'mv':([0,5,17,21,23,],[9,9,9,9,9,]),'macdef':([0,5,],[10,10,]),'incr':([0,5,17,21,23,],[11,11,11,11,11,]),'prog':([0,5,],[12,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> instr','prog',1,'p_prog','rpt_syntax.py',97),
  ('prog -> instr prog','prog',2,'p_prog','rpt_syntax.py',98),
  ('instr -> cmd','instr',1,'p_instr','rpt_syntax.py',105),
  ('instr -> macdef','instr',1,'p_instr','rpt_syntax.py',106),
  ('cmd -> incr','cmd',1,'p_cmd','rpt_syntax.py',110),
  ('cmd -> mv','cmd',1,'p_cmd','rpt_syntax.py',111),
  ('cmd -> rpt','cmd',1,'p_cmd','rpt_syntax.py',112),
  ('cmd -> mac','cmd',1,'p_cmd','rpt_syntax.py',113),
  ('incr -> INC REG','incr',2,'p_incr','rpt_syntax.py',117),
  ('mv -> REG MOVE REG','mv',3,'p_mv','rpt_syntax.py',121),
  ('mv -> REG MOVE INT','mv',3,'p_mv','rpt_syntax.py',122),
  ('rpt -> REPEAT REG body','rpt',3,'p_rpt','rpt_syntax.py',126),
  ('body -> innerbody END','body',2,'p_body','rpt_syntax.py',130),
  ('innerbody -> cmd','innerbody',1,'p_innerbody','rpt_syntax.py',134),
  ('innerbody -> cmd innerbody','innerbody',2,'p_innerbody','rpt_syntax.py',135),
  ('mac -> REG MOVE ID reglist','mac',4,'p_mac','rpt_syntax.py',143),
  ('macdef -> DEF ID reglist body','macdef',4,'p_macdef','rpt_syntax.py',148),
  ('innerreglist -> REG','innerreglist',1,'p_innerreglist','rpt_syntax.py',152),
  ('innerreglist -> REG innerreglist','innerreglist',2,'p_innerreglist','rpt_syntax.py',153),
  ('reglist -> LP innerreglist RP','reglist',3,'p_reglist','rpt_syntax.py',160),
]
