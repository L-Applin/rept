
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DEF END ID INC INT LP MOVE REG REPEAT RPprog : instr \n            | instr proginstr : cmd \n             | macdefcmd : incr \n           | mv \n           | rpt \n           | macincr : INC REGmv : REG MOVE REG \n          | REG MOVE INTrpt : REPEAT REG bodybody : innerbody ENDinnerbody : cmd \n                 | cmd innerbodymac : REG MOVE ID reglistmacdef : DEF ID reglist bodyinnerreglist : REG \n                    | REG innerreglistreglist : LP innerreglist RP '
    
_lr_action_items = {'MOVE':([2,],[13,]),'REPEAT':([0,3,5,7,8,9,10,12,14,17,18,20,21,23,24,26,27,31,33,],[11,-6,-3,-4,11,-5,-7,-8,-9,11,-11,-10,11,-12,11,-16,-17,-13,-20,]),'END':([3,9,10,12,14,18,20,23,24,25,26,30,31,33,],[-6,-5,-7,-8,-9,-11,-10,-12,-14,31,-16,-15,-13,-20,]),'REG':([0,3,4,5,7,8,9,10,11,12,13,14,17,18,20,21,22,23,24,26,27,28,31,33,],[2,-6,14,-3,-4,2,-5,-7,17,-8,20,-9,2,-11,-10,2,28,-12,2,-16,-17,28,-13,-20,]),'INT':([13,],[18,]),'INC':([0,3,5,7,8,9,10,12,14,17,18,20,21,23,24,26,27,31,33,],[4,-6,-3,-4,4,-5,-7,-8,-9,4,-11,-10,4,-12,4,-16,-17,-13,-20,]),'RP':([28,29,32,],[-18,33,-19,]),'DEF':([0,3,5,7,8,9,10,12,14,18,20,23,26,27,31,33,],[6,-6,-3,-4,6,-5,-7,-8,-9,-11,-10,-12,-16,-17,-13,-20,]),'LP':([15,19,],[22,22,]),'ID':([6,13,],[15,19,]),'$end':([1,3,5,7,8,9,10,12,14,16,18,20,23,26,27,31,33,],[0,-6,-3,-4,-1,-5,-7,-8,-9,-2,-11,-10,-12,-16,-17,-13,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,8,],[1,16,]),'reglist':([15,19,],[21,26,]),'body':([17,21,],[23,27,]),'mv':([0,8,17,21,24,],[3,3,3,3,3,]),'macdef':([0,8,],[7,7,]),'instr':([0,8,],[8,8,]),'incr':([0,8,17,21,24,],[9,9,9,9,9,]),'rpt':([0,8,17,21,24,],[10,10,10,10,10,]),'mac':([0,8,17,21,24,],[12,12,12,12,12,]),'cmd':([0,8,17,21,24,],[5,5,24,24,24,]),'innerbody':([17,21,24,],[25,25,30,]),'innerreglist':([22,28,],[29,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> instr','prog',1,'p_prog','rpt_syntax.py',97),
  ('prog -> instr prog','prog',2,'p_prog','rpt_syntax.py',98),
  ('instr -> cmd','instr',1,'p_instr','rpt_syntax.py',105),
  ('instr -> macdef','instr',1,'p_instr','rpt_syntax.py',106),
  ('cmd -> incr','cmd',1,'p_cmd','rpt_syntax.py',110),
  ('cmd -> mv','cmd',1,'p_cmd','rpt_syntax.py',111),
  ('cmd -> rpt','cmd',1,'p_cmd','rpt_syntax.py',112),
  ('cmd -> mac','cmd',1,'p_cmd','rpt_syntax.py',113),
  ('incr -> INC REG','incr',2,'p_incr','rpt_syntax.py',117),
  ('mv -> REG MOVE REG','mv',3,'p_mv','rpt_syntax.py',121),
  ('mv -> REG MOVE INT','mv',3,'p_mv','rpt_syntax.py',122),
  ('rpt -> REPEAT REG body','rpt',3,'p_rpt','rpt_syntax.py',126),
  ('body -> innerbody END','body',2,'p_body','rpt_syntax.py',130),
  ('innerbody -> cmd','innerbody',1,'p_innerbody','rpt_syntax.py',134),
  ('innerbody -> cmd innerbody','innerbody',2,'p_innerbody','rpt_syntax.py',135),
  ('mac -> REG MOVE ID reglist','mac',4,'p_mac','rpt_syntax.py',143),
  ('macdef -> DEF ID reglist body','macdef',4,'p_macdef','rpt_syntax.py',148),
  ('innerreglist -> REG','innerreglist',1,'p_innerreglist','rpt_syntax.py',152),
  ('innerreglist -> REG innerreglist','innerreglist',2,'p_innerreglist','rpt_syntax.py',153),
  ('reglist -> LP innerreglist RP','reglist',3,'p_reglist','rpt_syntax.py',160),
]
