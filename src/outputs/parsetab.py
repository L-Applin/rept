
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DEF END ID INC INT LP MOVE REG REPEAT RPprog : instr \n            | instr proginstr : cmd \n             | macdefcmd : incr \n           | mv \n           | rpt \n           | macincr : INC REGmv : REG MOVE REG \n          | REG MOVE INTrpt : REPEAT REG bodybody : innerbody ENDinnerbody : cmd \n                 | cmd innerbodymac : REG MOVE ID reglistmacdef : DEF ID reglist bodyinnerreglist : REG \n                    | REG innerreglistreglist : LP innerreglist RP '
    
_lr_action_items = {'REPEAT':([0,1,2,4,7,9,10,12,13,15,19,21,22,23,25,28,29,31,33,],[8,-4,-7,-5,-8,8,-6,-3,-9,8,8,-12,8,-10,-11,-17,-13,-16,-20,]),'DEF':([0,1,2,4,7,9,10,12,13,21,23,25,28,29,31,33,],[5,-4,-7,-5,-8,5,-6,-3,-9,-12,-10,-11,-17,-13,-16,-20,]),'END':([2,4,7,10,13,20,21,22,23,25,29,30,31,33,],[-7,-5,-8,-6,-9,29,-12,-14,-10,-11,-13,-15,-16,-20,]),'INC':([0,1,2,4,7,9,10,12,13,15,19,21,22,23,25,28,29,31,33,],[3,-4,-7,-5,-8,3,-6,-3,-9,3,3,-12,3,-10,-11,-17,-13,-16,-20,]),'$end':([1,2,4,6,7,9,10,12,13,16,21,23,25,28,29,31,33,],[-4,-7,-5,0,-8,-1,-6,-3,-9,-2,-12,-10,-11,-17,-13,-16,-20,]),'REG':([0,1,2,3,4,7,8,9,10,12,13,15,17,18,19,21,22,23,25,26,28,29,31,33,],[11,-4,-7,13,-5,-8,15,11,-6,-3,-9,11,23,26,11,-12,11,-10,-11,26,-17,-13,-16,-20,]),'MOVE':([11,],[17,]),'INT':([17,],[25,]),'LP':([14,24,],[18,18,]),'RP':([26,27,32,],[-18,33,-19,]),'ID':([5,17,],[14,24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'macdef':([0,9,],[1,1,]),'rpt':([0,9,15,19,22,],[2,2,2,2,2,]),'innerreglist':([18,26,],[27,32,]),'incr':([0,9,15,19,22,],[4,4,4,4,4,]),'prog':([0,9,],[6,16,]),'innerbody':([15,19,22,],[20,20,30,]),'mac':([0,9,15,19,22,],[7,7,7,7,7,]),'reglist':([14,24,],[19,31,]),'instr':([0,9,],[9,9,]),'body':([15,19,],[21,28,]),'mv':([0,9,15,19,22,],[10,10,10,10,10,]),'cmd':([0,9,15,19,22,],[12,12,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> instr','prog',1,'p_prog','rpt_syntax.py',97),
  ('prog -> instr prog','prog',2,'p_prog','rpt_syntax.py',98),
  ('instr -> cmd','instr',1,'p_instr','rpt_syntax.py',105),
  ('instr -> macdef','instr',1,'p_instr','rpt_syntax.py',106),
  ('cmd -> incr','cmd',1,'p_cmd','rpt_syntax.py',110),
  ('cmd -> mv','cmd',1,'p_cmd','rpt_syntax.py',111),
  ('cmd -> rpt','cmd',1,'p_cmd','rpt_syntax.py',112),
  ('cmd -> mac','cmd',1,'p_cmd','rpt_syntax.py',113),
  ('incr -> INC REG','incr',2,'p_incr','rpt_syntax.py',117),
  ('mv -> REG MOVE REG','mv',3,'p_mv','rpt_syntax.py',121),
  ('mv -> REG MOVE INT','mv',3,'p_mv','rpt_syntax.py',122),
  ('rpt -> REPEAT REG body','rpt',3,'p_rpt','rpt_syntax.py',126),
  ('body -> innerbody END','body',2,'p_body','rpt_syntax.py',130),
  ('innerbody -> cmd','innerbody',1,'p_innerbody','rpt_syntax.py',134),
  ('innerbody -> cmd innerbody','innerbody',2,'p_innerbody','rpt_syntax.py',135),
  ('mac -> REG MOVE ID reglist','mac',4,'p_mac','rpt_syntax.py',143),
  ('macdef -> DEF ID reglist body','macdef',4,'p_macdef','rpt_syntax.py',148),
  ('innerreglist -> REG','innerreglist',1,'p_innerreglist','rpt_syntax.py',152),
  ('innerreglist -> REG innerreglist','innerreglist',2,'p_innerreglist','rpt_syntax.py',153),
  ('reglist -> LP innerreglist RP','reglist',3,'p_reglist','rpt_syntax.py',160),
]
