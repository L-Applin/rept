Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> instr
Rule 2     prog -> instr prog
Rule 3     instr -> cmd
Rule 4     instr -> macdef
Rule 5     cmd -> incr
Rule 6     cmd -> mv
Rule 7     cmd -> rpt
Rule 8     cmd -> mac
Rule 9     incr -> INC REG
Rule 10    mv -> REG MOVE REG
Rule 11    mv -> REG MOVE INT
Rule 12    rpt -> REPEAT REG body
Rule 13    body -> innerbody END
Rule 14    innerbody -> cmd
Rule 15    innerbody -> cmd innerbody
Rule 16    mac -> REG MOVE ID reglist
Rule 17    macdef -> DEF ID reglist body
Rule 18    innerreglist -> REG
Rule 19    innerreglist -> REG innerreglist
Rule 20    reglist -> LP innerreglist RP

Terminals, with rules where they appear

DEF                  : 17
END                  : 13
ID                   : 16 17
INC                  : 9
INT                  : 11
LP                   : 20
MOVE                 : 10 11 16
REG                  : 9 10 10 11 12 16 18 19
REPEAT               : 12
RP                   : 20
error                : 

Nonterminals, with rules where they appear

body                 : 12 17
cmd                  : 3 14 15
incr                 : 5
innerbody            : 13 15
innerreglist         : 19 20
instr                : 1 2
mac                  : 8
macdef               : 4
mv                   : 6
prog                 : 2 0
reglist              : 16 17
rpt                  : 7

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . instr
    (2) prog -> . instr prog
    (3) instr -> . cmd
    (4) instr -> . macdef
    (5) cmd -> . incr
    (6) cmd -> . mv
    (7) cmd -> . rpt
    (8) cmd -> . mac
    (17) macdef -> . DEF ID reglist body
    (9) incr -> . INC REG
    (10) mv -> . REG MOVE REG
    (11) mv -> . REG MOVE INT
    (12) rpt -> . REPEAT REG body
    (16) mac -> . REG MOVE ID reglist

    DEF             shift and go to state 12
    INC             shift and go to state 8
    REG             shift and go to state 1
    REPEAT          shift and go to state 2

    mv                             shift and go to state 11
    incr                           shift and go to state 3
    rpt                            shift and go to state 10
    macdef                         shift and go to state 9
    instr                          shift and go to state 4
    mac                            shift and go to state 5
    prog                           shift and go to state 6
    cmd                            shift and go to state 7

state 1

    (10) mv -> REG . MOVE REG
    (11) mv -> REG . MOVE INT
    (16) mac -> REG . MOVE ID reglist

    MOVE            shift and go to state 13


state 2

    (12) rpt -> REPEAT . REG body

    REG             shift and go to state 14


state 3

    (5) cmd -> incr .

    INC             reduce using rule 5 (cmd -> incr .)
    REG             reduce using rule 5 (cmd -> incr .)
    REPEAT          reduce using rule 5 (cmd -> incr .)
    END             reduce using rule 5 (cmd -> incr .)
    DEF             reduce using rule 5 (cmd -> incr .)
    $end            reduce using rule 5 (cmd -> incr .)


state 4

    (1) prog -> instr .
    (2) prog -> instr . prog
    (1) prog -> . instr
    (2) prog -> . instr prog
    (3) instr -> . cmd
    (4) instr -> . macdef
    (5) cmd -> . incr
    (6) cmd -> . mv
    (7) cmd -> . rpt
    (8) cmd -> . mac
    (17) macdef -> . DEF ID reglist body
    (9) incr -> . INC REG
    (10) mv -> . REG MOVE REG
    (11) mv -> . REG MOVE INT
    (12) rpt -> . REPEAT REG body
    (16) mac -> . REG MOVE ID reglist

    $end            reduce using rule 1 (prog -> instr .)
    DEF             shift and go to state 12
    INC             shift and go to state 8
    REG             shift and go to state 1
    REPEAT          shift and go to state 2

    mv                             shift and go to state 11
    incr                           shift and go to state 3
    rpt                            shift and go to state 10
    macdef                         shift and go to state 9
    instr                          shift and go to state 4
    mac                            shift and go to state 5
    prog                           shift and go to state 15
    cmd                            shift and go to state 7

state 5

    (8) cmd -> mac .

    INC             reduce using rule 8 (cmd -> mac .)
    REG             reduce using rule 8 (cmd -> mac .)
    REPEAT          reduce using rule 8 (cmd -> mac .)
    END             reduce using rule 8 (cmd -> mac .)
    DEF             reduce using rule 8 (cmd -> mac .)
    $end            reduce using rule 8 (cmd -> mac .)


state 6

    (0) S' -> prog .



state 7

    (3) instr -> cmd .

    DEF             reduce using rule 3 (instr -> cmd .)
    INC             reduce using rule 3 (instr -> cmd .)
    REG             reduce using rule 3 (instr -> cmd .)
    REPEAT          reduce using rule 3 (instr -> cmd .)
    $end            reduce using rule 3 (instr -> cmd .)


state 8

    (9) incr -> INC . REG

    REG             shift and go to state 16


state 9

    (4) instr -> macdef .

    DEF             reduce using rule 4 (instr -> macdef .)
    INC             reduce using rule 4 (instr -> macdef .)
    REG             reduce using rule 4 (instr -> macdef .)
    REPEAT          reduce using rule 4 (instr -> macdef .)
    $end            reduce using rule 4 (instr -> macdef .)


state 10

    (7) cmd -> rpt .

    INC             reduce using rule 7 (cmd -> rpt .)
    REG             reduce using rule 7 (cmd -> rpt .)
    REPEAT          reduce using rule 7 (cmd -> rpt .)
    END             reduce using rule 7 (cmd -> rpt .)
    DEF             reduce using rule 7 (cmd -> rpt .)
    $end            reduce using rule 7 (cmd -> rpt .)


state 11

    (6) cmd -> mv .

    INC             reduce using rule 6 (cmd -> mv .)
    REG             reduce using rule 6 (cmd -> mv .)
    REPEAT          reduce using rule 6 (cmd -> mv .)
    END             reduce using rule 6 (cmd -> mv .)
    DEF             reduce using rule 6 (cmd -> mv .)
    $end            reduce using rule 6 (cmd -> mv .)


state 12

    (17) macdef -> DEF . ID reglist body

    ID              shift and go to state 17


state 13

    (10) mv -> REG MOVE . REG
    (11) mv -> REG MOVE . INT
    (16) mac -> REG MOVE . ID reglist

    REG             shift and go to state 20
    INT             shift and go to state 19
    ID              shift and go to state 18


state 14

    (12) rpt -> REPEAT REG . body
    (13) body -> . innerbody END
    (14) innerbody -> . cmd
    (15) innerbody -> . cmd innerbody
    (5) cmd -> . incr
    (6) cmd -> . mv
    (7) cmd -> . rpt
    (8) cmd -> . mac
    (9) incr -> . INC REG
    (10) mv -> . REG MOVE REG
    (11) mv -> . REG MOVE INT
    (12) rpt -> . REPEAT REG body
    (16) mac -> . REG MOVE ID reglist

    INC             shift and go to state 8
    REG             shift and go to state 1
    REPEAT          shift and go to state 2

    innerbody                      shift and go to state 21
    rpt                            shift and go to state 10
    mv                             shift and go to state 11
    incr                           shift and go to state 3
    body                           shift and go to state 22
    cmd                            shift and go to state 23
    mac                            shift and go to state 5

state 15

    (2) prog -> instr prog .

    $end            reduce using rule 2 (prog -> instr prog .)


state 16

    (9) incr -> INC REG .

    INC             reduce using rule 9 (incr -> INC REG .)
    REG             reduce using rule 9 (incr -> INC REG .)
    REPEAT          reduce using rule 9 (incr -> INC REG .)
    END             reduce using rule 9 (incr -> INC REG .)
    DEF             reduce using rule 9 (incr -> INC REG .)
    $end            reduce using rule 9 (incr -> INC REG .)


state 17

    (17) macdef -> DEF ID . reglist body
    (20) reglist -> . LP innerreglist RP

    LP              shift and go to state 25

    reglist                        shift and go to state 24

state 18

    (16) mac -> REG MOVE ID . reglist
    (20) reglist -> . LP innerreglist RP

    LP              shift and go to state 25

    reglist                        shift and go to state 26

state 19

    (11) mv -> REG MOVE INT .

    DEF             reduce using rule 11 (mv -> REG MOVE INT .)
    INC             reduce using rule 11 (mv -> REG MOVE INT .)
    REG             reduce using rule 11 (mv -> REG MOVE INT .)
    REPEAT          reduce using rule 11 (mv -> REG MOVE INT .)
    $end            reduce using rule 11 (mv -> REG MOVE INT .)
    END             reduce using rule 11 (mv -> REG MOVE INT .)


state 20

    (10) mv -> REG MOVE REG .

    DEF             reduce using rule 10 (mv -> REG MOVE REG .)
    INC             reduce using rule 10 (mv -> REG MOVE REG .)
    REG             reduce using rule 10 (mv -> REG MOVE REG .)
    REPEAT          reduce using rule 10 (mv -> REG MOVE REG .)
    $end            reduce using rule 10 (mv -> REG MOVE REG .)
    END             reduce using rule 10 (mv -> REG MOVE REG .)


state 21

    (13) body -> innerbody . END

    END             shift and go to state 27


state 22

    (12) rpt -> REPEAT REG body .

    INC             reduce using rule 12 (rpt -> REPEAT REG body .)
    REG             reduce using rule 12 (rpt -> REPEAT REG body .)
    REPEAT          reduce using rule 12 (rpt -> REPEAT REG body .)
    END             reduce using rule 12 (rpt -> REPEAT REG body .)
    DEF             reduce using rule 12 (rpt -> REPEAT REG body .)
    $end            reduce using rule 12 (rpt -> REPEAT REG body .)


state 23

    (14) innerbody -> cmd .
    (15) innerbody -> cmd . innerbody
    (14) innerbody -> . cmd
    (15) innerbody -> . cmd innerbody
    (5) cmd -> . incr
    (6) cmd -> . mv
    (7) cmd -> . rpt
    (8) cmd -> . mac
    (9) incr -> . INC REG
    (10) mv -> . REG MOVE REG
    (11) mv -> . REG MOVE INT
    (12) rpt -> . REPEAT REG body
    (16) mac -> . REG MOVE ID reglist

    END             reduce using rule 14 (innerbody -> cmd .)
    INC             shift and go to state 8
    REG             shift and go to state 1
    REPEAT          shift and go to state 2

    innerbody                      shift and go to state 28
    rpt                            shift and go to state 10
    mv                             shift and go to state 11
    incr                           shift and go to state 3
    cmd                            shift and go to state 23
    mac                            shift and go to state 5

state 24

    (17) macdef -> DEF ID reglist . body
    (13) body -> . innerbody END
    (14) innerbody -> . cmd
    (15) innerbody -> . cmd innerbody
    (5) cmd -> . incr
    (6) cmd -> . mv
    (7) cmd -> . rpt
    (8) cmd -> . mac
    (9) incr -> . INC REG
    (10) mv -> . REG MOVE REG
    (11) mv -> . REG MOVE INT
    (12) rpt -> . REPEAT REG body
    (16) mac -> . REG MOVE ID reglist

    INC             shift and go to state 8
    REG             shift and go to state 1
    REPEAT          shift and go to state 2

    mv                             shift and go to state 11
    incr                           shift and go to state 3
    rpt                            shift and go to state 10
    innerbody                      shift and go to state 21
    body                           shift and go to state 29
    cmd                            shift and go to state 23
    mac                            shift and go to state 5

state 25

    (20) reglist -> LP . innerreglist RP
    (18) innerreglist -> . REG
    (19) innerreglist -> . REG innerreglist

    REG             shift and go to state 30

    innerreglist                   shift and go to state 31

state 26

    (16) mac -> REG MOVE ID reglist .

    INC             reduce using rule 16 (mac -> REG MOVE ID reglist .)
    REG             reduce using rule 16 (mac -> REG MOVE ID reglist .)
    REPEAT          reduce using rule 16 (mac -> REG MOVE ID reglist .)
    END             reduce using rule 16 (mac -> REG MOVE ID reglist .)
    DEF             reduce using rule 16 (mac -> REG MOVE ID reglist .)
    $end            reduce using rule 16 (mac -> REG MOVE ID reglist .)


state 27

    (13) body -> innerbody END .

    DEF             reduce using rule 13 (body -> innerbody END .)
    INC             reduce using rule 13 (body -> innerbody END .)
    REG             reduce using rule 13 (body -> innerbody END .)
    REPEAT          reduce using rule 13 (body -> innerbody END .)
    $end            reduce using rule 13 (body -> innerbody END .)
    END             reduce using rule 13 (body -> innerbody END .)


state 28

    (15) innerbody -> cmd innerbody .

    END             reduce using rule 15 (innerbody -> cmd innerbody .)


state 29

    (17) macdef -> DEF ID reglist body .

    DEF             reduce using rule 17 (macdef -> DEF ID reglist body .)
    INC             reduce using rule 17 (macdef -> DEF ID reglist body .)
    REG             reduce using rule 17 (macdef -> DEF ID reglist body .)
    REPEAT          reduce using rule 17 (macdef -> DEF ID reglist body .)
    $end            reduce using rule 17 (macdef -> DEF ID reglist body .)


state 30

    (18) innerreglist -> REG .
    (19) innerreglist -> REG . innerreglist
    (18) innerreglist -> . REG
    (19) innerreglist -> . REG innerreglist

    RP              reduce using rule 18 (innerreglist -> REG .)
    REG             shift and go to state 30

    innerreglist                   shift and go to state 32

state 31

    (20) reglist -> LP innerreglist . RP

    RP              shift and go to state 33


state 32

    (19) innerreglist -> REG innerreglist .

    RP              reduce using rule 19 (innerreglist -> REG innerreglist .)


state 33

    (20) reglist -> LP innerreglist RP .

    INC             reduce using rule 20 (reglist -> LP innerreglist RP .)
    REG             reduce using rule 20 (reglist -> LP innerreglist RP .)
    REPEAT          reduce using rule 20 (reglist -> LP innerreglist RP .)
    DEF             reduce using rule 20 (reglist -> LP innerreglist RP .)
    $end            reduce using rule 20 (reglist -> LP innerreglist RP .)
    END             reduce using rule 20 (reglist -> LP innerreglist RP .)

