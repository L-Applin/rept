
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DEF END ID INC INT MOVE REG REPEATprog : instr \n            | instr proginstr : cmd \n             | macdefcmd : incr \n           | mv \n           | rpt \n           | macincr : INC REGmv : REG MOVE REG \n          | REG MOVE INTrpt : REPEAT REG bodybody : innerbody ENDinnerbody : cmd \n                 | cmd innerbodymac : REG MOVE ID reglistmacdef : DEF ID reglist bodyreglist : REG \n               | REG reglist'
    
_lr_action_items = {'DEF':([0,4,5,6,7,8,9,11,15,19,20,22,23,26,27,28,29,],[1,-7,1,-8,-4,-5,-3,-6,-9,-18,-11,-10,-12,-17,-19,-16,-13,]),'END':([4,6,8,11,15,19,20,22,23,24,25,27,28,29,30,],[-7,-8,-5,-6,-9,-18,-11,-10,-12,29,-14,-19,-16,-13,-15,]),'INT':([14,],[20,]),'REG':([0,3,4,5,6,7,8,9,10,11,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,],[2,15,-7,2,-8,-4,-5,-3,17,-6,19,22,-9,2,2,19,-11,19,-10,-12,2,-17,-19,-16,-13,]),'INC':([0,4,5,6,7,8,9,11,15,17,18,19,20,22,23,25,26,27,28,29,],[3,-7,3,-8,-4,-5,-3,-6,-9,3,3,-18,-11,-10,-12,3,-17,-19,-16,-13,]),'$end':([4,5,6,7,8,9,11,12,15,16,19,20,22,23,26,27,28,29,],[-7,-1,-8,-4,-5,-3,-6,0,-9,-2,-18,-11,-10,-12,-17,-19,-16,-13,]),'MOVE':([2,],[14,]),'ID':([1,14,],[13,21,]),'REPEAT':([0,4,5,6,7,8,9,11,15,17,18,19,20,22,23,25,26,27,28,29,],[10,-7,10,-8,-4,-5,-3,-6,-9,10,10,-18,-11,-10,-12,10,-17,-19,-16,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rpt':([0,5,17,18,25,],[4,4,4,4,4,]),'instr':([0,5,],[5,5,]),'prog':([0,5,],[12,16,]),'mac':([0,5,17,18,25,],[6,6,6,6,6,]),'macdef':([0,5,],[7,7,]),'reglist':([13,19,21,],[18,27,28,]),'body':([17,18,],[23,26,]),'incr':([0,5,17,18,25,],[8,8,8,8,8,]),'innerbody':([17,18,25,],[24,24,30,]),'mv':([0,5,17,18,25,],[11,11,11,11,11,]),'cmd':([0,5,17,18,25,],[9,9,25,25,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> instr','prog',1,'p_prog','rpt_syntax.py',79),
  ('prog -> instr prog','prog',2,'p_prog','rpt_syntax.py',80),
  ('instr -> cmd','instr',1,'p_instr','rpt_syntax.py',87),
  ('instr -> macdef','instr',1,'p_instr','rpt_syntax.py',88),
  ('cmd -> incr','cmd',1,'p_cmd','rpt_syntax.py',92),
  ('cmd -> mv','cmd',1,'p_cmd','rpt_syntax.py',93),
  ('cmd -> rpt','cmd',1,'p_cmd','rpt_syntax.py',94),
  ('cmd -> mac','cmd',1,'p_cmd','rpt_syntax.py',95),
  ('incr -> INC REG','incr',2,'p_incr','rpt_syntax.py',99),
  ('mv -> REG MOVE REG','mv',3,'p_mv','rpt_syntax.py',103),
  ('mv -> REG MOVE INT','mv',3,'p_mv','rpt_syntax.py',104),
  ('rpt -> REPEAT REG body','rpt',3,'p_rpt','rpt_syntax.py',109),
  ('body -> innerbody END','body',2,'p_body','rpt_syntax.py',113),
  ('innerbody -> cmd','innerbody',1,'p_innerbody','rpt_syntax.py',117),
  ('innerbody -> cmd innerbody','innerbody',2,'p_innerbody','rpt_syntax.py',118),
  ('mac -> REG MOVE ID reglist','mac',4,'p_mac','rpt_syntax.py',128),
  ('macdef -> DEF ID reglist body','macdef',4,'p_macdef','rpt_syntax.py',133),
  ('reglist -> REG','reglist',1,'p_reglist','rpt_syntax.py',137),
  ('reglist -> REG reglist','reglist',2,'p_reglist','rpt_syntax.py',138),
]
